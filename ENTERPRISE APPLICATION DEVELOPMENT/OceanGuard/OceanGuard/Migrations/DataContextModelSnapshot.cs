// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OceanGuard.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace OceanGuard.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OceanGuard.Entities.Autoridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Autoridades");
                });

            modelBuilder.Entity("OceanGuard.Entities.DensidadeBanhista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataReporte")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("number(7,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("number(7,2)");

                    b.Property<int>("QuantidadeBanhistas")
                        .HasColumnType("number(7)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DensidadeBanhistas");
                });

            modelBuilder.Entity("OceanGuard.Entities.EventoNatural", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("number(7,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("number(7,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("EventosNaturais");
                });

            modelBuilder.Entity("OceanGuard.Entities.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutoridadeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataNotificacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("DensidadeBanhistaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EventoNaturalId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("OcorrenciaLixoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AutoridadeId");

                    b.HasIndex("DensidadeBanhistaId");

                    b.HasIndex("EventoNaturalId");

                    b.HasIndex("OcorrenciaLixoId");

                    b.ToTable("Notificacoes");
                });

            modelBuilder.Entity("OceanGuard.Entities.OcorrenciaLixo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcorrencia")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("number(7,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("number(7,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("OcorrenciasLixo");
                });

            modelBuilder.Entity("OceanGuard.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("OceanGuard.Entities.DensidadeBanhista", b =>
                {
                    b.HasOne("OceanGuard.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OceanGuard.Entities.EventoNatural", b =>
                {
                    b.HasOne("OceanGuard.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OceanGuard.Entities.Notificacao", b =>
                {
                    b.HasOne("OceanGuard.Entities.Autoridade", "Autoridade")
                        .WithMany()
                        .HasForeignKey("AutoridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanGuard.Entities.DensidadeBanhista", "DensidadeBanhista")
                        .WithMany()
                        .HasForeignKey("DensidadeBanhistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanGuard.Entities.EventoNatural", "EventoNatural")
                        .WithMany()
                        .HasForeignKey("EventoNaturalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanGuard.Entities.OcorrenciaLixo", "OcorrenciaLixo")
                        .WithMany()
                        .HasForeignKey("OcorrenciaLixoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autoridade");

                    b.Navigation("DensidadeBanhista");

                    b.Navigation("EventoNatural");

                    b.Navigation("OcorrenciaLixo");
                });

            modelBuilder.Entity("OceanGuard.Entities.OcorrenciaLixo", b =>
                {
                    b.HasOne("OceanGuard.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
